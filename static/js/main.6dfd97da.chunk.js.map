{"version":3,"sources":["components/Tariff/Tariff.js","components/TariffList/TariffList.js","serviceWorker.js","index.js","App.js"],"names":["Tariff","props","socials","map","o","src","alt","reverse","tariffElement","noMounthlyFee","bestSeller","className","tariffName","tariffPrice","tariffDays","gbUnlim","gb","mbAct","social","unlimSocials","minutesAct","minutes","unlimMinutes","smsAct","sms","bayBtn","tariffSettings","TariffList","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6dfd97da.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Tariff(props) {\n    const socialsImg = [\n        'https://msk.tele2.ru/api/media/asset?mediaId=m220005', \n        'https://msk.tele2.ru/api/media/asset?mediaId=m220001',\n        'https://msk.tele2.ru/api/media/asset?mediaId=m220003',\n        'https://msk.tele2.ru/api/media/asset?mediaId=m220006',\n        'https://msk.tele2.ru/api/media/asset?mediaId=m220004',\n        'https://msk.tele2.ru/api/media/asset?mediaId=m1990041',\n        'https://msk.tele2.ru/api/media/asset?mediaId=m1680033'\n    ]\n    const socials = socialsImg.map(o => <img src={o} alt=\"Social_Img\"/>).reverse()\n    \n    let tariffElement = <></>;\n    if (props.noMounthlyFee) {\n        tariffElement = (\n            <>\n                <div>\n                {props.bestSeller && <img src=\"https://msk.tele2.ru/api/media/asset?mediaId=m1310027\" className='best_seller' alt=\"\" />}\n                    <p className='tariff_name'>{props.tariffName}</p>\n                    <p className='tariff_price'>{props.tariffPrice}</p>\n                    <p className='tariff_R'>₽</p>\n                    <p className='tariff_mounth'>{props.tariffDays}</p>\n                </div>\n                <div className='tariff_GB'>\n                    {props.gbUnlim ?  \n                        <p className='tariff_gb'><b>БЕЗЛИМИТНЫЙ ИНТЕРНЕТ</b></p> :\n                        <p className='tariff_gb'><b>{props.gb}</b> {props.mbAct ? 'МБ' : 'ГБ'}</p>\n                    }\n                    {props.social && <div className='tariff_social'> <p>{props.unlimSocials}</p>{socials}</div>}\n                </div>\n                <div className='tariff_minutes'>\n                    {props.minutesAct && \n                        <p className='minutes'><b>{props.minutes}</b> мин.</p>}\n                    {props.unlimMinutes && <p className='unlim_minutes'>+ безлимит на Tele2 России</p>}\n                </div>\n                \n                <div className='tariff_sms'>\n                    {props.smsAct && <p><b>{props.sms}</b> SMS</p>}\n                </div> \n                <div className='tariff_bay'>\n                    <button className='tariff_byBtn'>{props.bayBtn}</button>\n                    {props.tariffSettings && \n                        <div className='tariff_settings'>\n                            <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT-mQrxQVBwtvmPWBLCL8Z6qFFC2nxiDqwM51QHYwniToAs2B8&s' alt=\"Settings_img\"/>\n                            <p> Настроить тариф</p>\n                        </div>\n                    }\n                </div> \n            </>\n        )\n    } else {\n        tariffElement = (\n            <>\n                <div>\n                    <p className='tariff_name'>{props.tariffName}</p>\n                    <p>Без абонентской платы</p>\n                </div>\n                <div className='tariff_bay'>\n                    <button className='tariff_byBtn'>{props.bayBtn}</button>\n                    {props.tariffSettings && \n                        <div className='tariff_settings'>\n                            <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT-mQrxQVBwtvmPWBLCL8Z6qFFC2nxiDqwM51QHYwniToAs2B8&s' alt=\"Settings_img\"/>\n                            <p> Настроить тариф</p>\n                        </div>\n                    }\n                </div> \n            </>\n        )\n    }\n\n    return (\n         <li className='tariff__item clearfix'>\n            {tariffElement}\n         </li>\n    )\n}\n","import React from 'react'\nimport Tariff from '../Tariff/Tariff'\nexport default function TariffList() {\n    \n    const tariffs = [\n        {\n            tariffName: 'Везде онлайн', \n            noMounthlyFee: true,\n            tariffPrice: 500, \n            tariffDays: '/месяц', \n            bestSeller: true,\n            gb: 40, \n            gbUnlim: false, \n            unlimSocials: '+безлимитные', \n            social: true,\n            minutes: 500, \n            minutesAct: true, \n            unlimMinutes: true,\n            smsAct: true,\n            sms: 50, \n            bayBtn: 'Купить SIM',\n        },\n        {\n            tariffName: 'Мой онлайн', \n            noMounthlyFee: true,\n            tariffPrice: 400, \n            tariffDays: '/месяц', \n            gb: 15, \n            unlimSocials: '+безлимитные', \n            social: true,\n            minutes: 500,\n            minutesAct: true,  \n            unlimMinutes: true,\n            bayBtn: 'Купить SIM',\n            tariffSettings:true\n        },\n        {\n            tariffName: 'Мой онлайн+', \n            noMounthlyFee: true,\n            tariffPrice: 700, \n            tariffDays: '/месяц', \n            gb: 30, \n            unlimSocials: '+безлимитные', \n            social: true,\n            minutes: 800,\n            minutesAct: true,  \n            unlimMinutes: true,\n            bayBtn: 'Купить SIM',\n            tariffSettings:true\n        },\n        {\n            tariffName: 'Мой разгавор', \n            noMounthlyFee: true,\n            tariffPrice: 200, \n            tariffDays: '/месяц', \n            gb: 2, \n            unlimSocials: '+безлимитные', \n            minutes: 200, \n            minutesAct: true, \n            unlimMinutes: true,\n            bayBtn: 'Купить SIM',\n            tariffSettings:true\n        },\n        {\n            tariffName: 'Мой Tele2', \n            noMounthlyFee: true,\n            tariffPrice: 7, \n            tariffDays: '/день',\n            gb: 5, \n            unlimSocials: '+безлимитные', \n            minutes: 500,\n            unlimMinutes: true,\n            bayBtn: 'Купить SIM',\n            tariffSettings:true\n        },\n        {\n            tariffName: 'Безлимит', \n            noMounthlyFee: true,\n            tariffPrice: 650, \n            tariffDays: '/месяц',\n            gbUnlim: true, \n            unlimSocials: '+безлимитные', \n            minutes: 500,\n            minutesAct: true, \n            unlimMinutes: true,\n            smsAct: true,\n            sms: 50, \n            bayBtn: 'Купить SIM',\n        },\n        {\n            tariffName: 'Премиум', \n            noMounthlyFee: true,\n            tariffPrice: 1500, \n            tariffDays: '/месяц', \n            gb: 50,\n            unlimSocials: '+безлимитные', \n            social: false,\n            minutes: 2000,\n            minutesAct: true, \n            unlimMinutes: true,\n            smsAct: true,\n            sms: 500, \n            bayBtn: 'Купить SIM',\n        },\n        {\n            tariffName: 'Классический', \n            bayBtn: 'Купить SIM',\n            tariffSettings: true\n        },\n        {\n            tariffName: 'Интернет для устройств', \n            bayBtn: 'Купить SIM',\n        },\n        {\n            tariffName: 'Интернет для вещей', \n            noMounthlyFee: true,\n            tariffPrice: 100, \n            tariffDays: '/месяц', \n            gb: 300,\n            mbAct: true,\n            minutes: 30, \n            minutesAct: true, \n            smsAct: true,\n            sms: 100, \n            bayBtn: 'Купить SIM',\n        },\n    ];\n    return (\n        <>\n            <h1>Тарифы</h1>\n            <ul>\n                {tariffs.map(o => <Tariff {...o}/> )}\n            </ul>\n        </>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\r\nimport TariffList from './components/TariffList/TariffList'\r\n\r\nexport default function App() {\r\n    return (\r\n        <div>\r\n            <TariffList/>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}